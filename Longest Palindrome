public class Palindrome {
  static String str="";
    public static boolean checkPalindrome(String s){
//        int i,j=0;
//        i =s.length()-1;
//        while(i>=0 && j < s.length()){
//            
//            if(s.charAt(i--)!= s.charAt(j++)){
//                return false;
//            }
//            
//        }
//       return true;
 StringBuffer sb = new StringBuffer(s);
        System.out.println(sb);
                System.out.println(sb.reverse());
        if(s.equals(sb.reverse().toString())){
            System.out.println("sb is"+sb);
       return true;
        }
       else
       return false;
    }
    public static String longestPalindrome(String s) {
        int i,j;
        int n = s.length();
        boolean [][] arr = new boolean[n][n];
        int start=0,maxLength=1;


        for(i=0;i<n;i++){
            arr[i][i] = true;
        }
        
        for(i=0;i<n-1;i++){
            if(s.charAt(i)== s.charAt(i+1)){
                arr[i][i+1] = true;
                start = i;
                maxLength = 2;
            }
        }
        
        for(int k =3;k<=n;k++){
            for(i=0; i<n-k+1;++i){
             
            j=i+k-1;
            
            if(arr[i+1][j-1] && s.charAt(i)== s.charAt(j)){
                arr[i][j] = true;
                
                if(k>maxLength){
                    start = i;
                    maxLength=k;
                }
            }
            }
        }
        
        str=s.substring(i,i+maxLength);
        return str;
    }
    
    public static void main(String[] args) {
        String s = "babad";
        System.out.println(longestPalindrome(s));
//        StringBuffer sb = new StringBuffer("ad");
//        String str = sb.reverse().toString();
//        System.out.println(sb.reverse());
//        if(str.equals(sb.toString())){
//            System.out.println(sb);
//            System.out.println("true + true");
//        }
//        System.out.println((sb.equals(sb.reverse()))?"true":"false");
    }
}
